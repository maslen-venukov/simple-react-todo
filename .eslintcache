[{"C:\\#dev\\react-simple-todo\\src\\App.js":"1","C:\\#dev\\react-simple-todo\\src\\index.js":"2","C:\\#dev\\react-simple-todo\\src\\components\\List.jsx":"3","C:\\#dev\\react-simple-todo\\src\\components\\Item.jsx":"4","C:\\#dev\\react-simple-todo\\src\\components\\Popup.jsx":"5"},{"size":2619,"mtime":1609094014713,"results":"6","hashOfConfig":"7"},{"size":226,"mtime":1609087766710,"results":"8","hashOfConfig":"7"},{"size":686,"mtime":1609090432057,"results":"9","hashOfConfig":"7"},{"size":4651,"mtime":1609092875450,"results":"10","hashOfConfig":"7"},{"size":1817,"mtime":1609091705949,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5bw2p7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\#dev\\react-simple-todo\\src\\App.js",[],"C:\\#dev\\react-simple-todo\\src\\index.js",[],"C:\\#dev\\react-simple-todo\\src\\components\\List.jsx",[],"C:\\#dev\\react-simple-todo\\src\\components\\Item.jsx",["23"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = ({ id, text, completed, onComplete, onRemove, onEdit }) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [value, setValue] = useState(text);\r\n  const inputRef = useRef();\r\n\r\n  const handleEdit = () => {\r\n    const processedValue = value.replace(/\\s+/g, ' ').trim();\r\n    setEditing(false);\r\n    if(value.trim()) {\r\n      onEdit(id, processedValue);\r\n    } else {\r\n      alert('Введите название задачи');\r\n      setValue(text);\r\n    };\r\n  };\r\n\r\n  const handleOutsideClick = e => {\r\n    const path = e.path || (e.composedPath && e.composedPath());\r\n    inputRef.current && !path.includes(inputRef.current.closest('.list-item')) && handleEdit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current && inputRef.current.focus();\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n    return () => {\r\n      document.body.removeEventListener('click', handleOutsideClick);\r\n    };\r\n  }, [isEditing, value]);\r\n\r\n  const toggleEditing = () => setEditing(!isEditing);\r\n\r\n  const onInputChange = e => setValue(e.target.value);\r\n\r\n  const handleComplete = () => onComplete(id, !completed);\r\n\r\n  const handleRemove = () => window.confirm('Вы дейсвительно хотите удалить задачу?') && onRemove(id);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    handleEdit();\r\n  };\r\n\r\n  return (\r\n    <li className=\"list__item list-item\">\r\n      <input onChange={handleComplete} id={id} type=\"checkbox\" checked={completed} className=\"list-item__checkbox\" />\r\n      <label htmlFor={id} className=\"list-item__label\">\r\n        <svg className=\"list-item__mark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 212.045 212.045\">\r\n          <path d=\"M167.871,0H44.84C34.82,0,26.022,8.243,26.022,18v182c0,3.266,0.909,5.988,2.374,8.091c1.752,2.514,4.573,3.955,7.598,3.954 c2.86,0,5.905-1.273,8.717-3.675l55.044-46.735c1.7-1.452,4.142-2.284,6.681-2.284c2.538,0,4.975,0.832,6.68,2.288l54.86,46.724 c2.822,2.409,5.657,3.683,8.512,3.683c4.828,0,9.534-3.724,9.534-12.045V18C186.022,8.243,177.891,0,167.871,0z\" />\r\n        </svg>\r\n        {isEditing ? (\r\n          <form onSubmit={onSubmit} className=\"list-item__form\">\r\n            <input\r\n              ref={inputRef}\r\n              value={value}\r\n              onChange={onInputChange}\r\n              type=\"text\"\r\n              className=\"list-item__input\"\r\n            />\r\n            <button className=\"list-item__edit\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45.701 45.7\">\r\n                <path d=\"M20.687,38.332c-2.072,2.072-5.434,2.072-7.505,0L1.554,26.704c-2.072-2.071-2.072-5.433,0-7.504 c2.071-2.072,5.433-2.072,7.505,0l6.928,6.927c0.523,0.522,1.372,0.522,1.896,0L36.642,7.368c2.071-2.072,5.433-2.072,7.505,0 c0.995,0.995,1.554,2.345,1.554,3.752c0,1.407-0.559,2.757-1.554,3.752L20.687,38.332z\"/>\r\n              </svg>\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <span className=\"list-item__text\">{value}</span>\r\n        )}\r\n      </label>\r\n      <button onClick={toggleEditing} className=\"list-item__pen\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 383.947 383.947\">\r\n          <polygon points=\"0,303.947 0,383.947 80,383.947 316.053,147.893 236.053,67.893 \"/>\r\n          <path d=\"M377.707,56.053L327.893,6.24c-8.32-8.32-21.867-8.32-30.187,0l-39.04,39.04l80,80l39.04-39.04 C386.027,77.92,386.027,64.373,377.707,56.053z\"/>\r\n        </svg>\r\n      </button>\r\n      <button onClick={handleRemove} className=\"list-item__remove\">\r\n        <svg viewBox=\"0 0 365.696 365.696\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" />\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  onComplete: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onEdit: PropTypes.func.isRequired\r\n};","C:\\#dev\\react-simple-todo\\src\\components\\Popup.jsx",["24"],{"ruleId":"25","severity":1,"message":"26","line":31,"column":6,"nodeType":"27","endLine":31,"endColumn":24,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"26","line":17,"column":6,"nodeType":"27","endLine":17,"endColumn":8,"suggestions":"29"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleOutsideClick'. Either include it or remove the dependency array.","ArrayExpression",["30"],["31"],{"desc":"32","fix":"33"},{"desc":"34","fix":"35"},"Update the dependencies array to be: [handleOutsideClick, isEditing, value]",{"range":"36","text":"37"},"Update the dependencies array to be: [handleOutsideClick]",{"range":"38","text":"39"},[1024,1042],"[handleOutsideClick, isEditing, value]",[590,592],"[handleOutsideClick]"]